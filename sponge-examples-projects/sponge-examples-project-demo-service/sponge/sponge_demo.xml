<?xml version="1.0" encoding="UTF-8"?>
<sponge xmlns="http://sponge.openksavi.org" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://sponge.openksavi.org http://sponge.openksavi.org/schema/config.xsd">

    <properties>
        <!-- Set these properties via system properties in a servlet container environment! -->
        <!-- <property name="mnist.home">mnist</property> -->
        <!-- <property name="password.file">password.txt</property> -->
    </properties>

    <knowledgeBases>
        <knowledgeBase name="demo" displayName="Demo">
            <file>sponge_demo.py</file>
        </knowledgeBase>
        <knowledgeBase name="digits" displayName="Digits">
            <file>classpath:org/openksavi/sponge/tensorflow/mnist/mnist_library_common.py</file>
            <file>classpath:org/openksavi/sponge/tensorflow/mnist/mnist_library_predict.py</file>
            <file>mnist_demo.py</file>
        </knowledgeBase>
        <knowledgeBase name="digitsAdmin" displayName="Digits admin">
            <file>classpath:org/openksavi/sponge/tensorflow/mnist/mnist_library_common.py</file>
            <file>classpath:org/openksavi/sponge/tensorflow/mnist/mnist_library_admin.py</file>
        </knowledgeBase>
        <knowledgeBase name="admin" displayName="Admin">
            <file>classpath:org/openksavi/sponge/restapi/server/administration_library.py</file>
        </knowledgeBase>
        <knowledgeBase name="security" displayName="Security">
            <file>rest_api_security.py</file>
        </knowledgeBase>
    </knowledgeBases>

    <plugins>
        <plugin name="py4j" class="org.openksavi.sponge.py4j.ClientServerPy4JPlugin">
            <configuration>
                <facadeInterface>org.openksavi.sponge.tensorflow.mnist.MnistService</facadeInterface>
                <pythonScript>
                    <executable>${user.home}/tensorflow/bin/python3</executable>
                    <argument>mnist_service.py</argument>
                    <!-- The model file and the temporary directory are specified relative to the Python workingDir. -->
                    <argument>--modelfile=../data/mnist_model.h5</argument>
                    <argument>--tempdir=../_tmp_</argument>
                    <workingDir>${mnist.home}/python</workingDir>
                    <waitForOutputLineRegexp>MNIST service has started.</waitForOutputLineRegexp>
                    <waitForErrorOutputLineRegexp>MNIST service has failed to start.</waitForErrorOutputLineRegexp>
                    <redirectType>LOGGER</redirectType>
                </pythonScript>
            </configuration>
        </plugin>
    </plugins>
</sponge>

